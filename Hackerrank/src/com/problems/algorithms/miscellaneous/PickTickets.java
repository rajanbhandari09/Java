package com.problems.algorithms.miscellaneous;

import java.util.Collections;
import java.util.PriorityQueue;
import java.util.Scanner;

public class PickTickets {

	public static void main(String[] args) {
		
		Scanner input = new Scanner(System.in);
		//number of windows
		int n = input.nextInt();
		//Number of tickets to be sold
		int m = input.nextInt();
		
		//Array holding tickets
		int[] windows = new int[n];
		
		for(int i=0;i<n;i++){
			windows[i] = input.nextInt();
		}
		
		System.out.println("Maximum revenue generated by selling " +m+" tickets: " + maximumMoneyBySellingTickets(windows,m));
		input.close();
	}

	private static int maximumMoneyBySellingTickets(int[] windows, int m) {
		
		int maximumMoneyBySellingTickets = 0;
		int maxTicketsInAWindow = 0;
		PriorityQueue<Integer> maxValueTickets = new PriorityQueue<>(windows.length,Collections.reverseOrder());
		
		for(int tickets: windows){
			maxValueTickets.add(tickets);
		}
		
		for(int i=0;i<m;i++){
			maxTicketsInAWindow = maxValueTickets.remove();			
			maximumMoneyBySellingTickets += maxTicketsInAWindow;
			maxTicketsInAWindow--;
			maxValueTickets.add(maxTicketsInAWindow);
		}
		
		return maximumMoneyBySellingTickets;
	}

}
